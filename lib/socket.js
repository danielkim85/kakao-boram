const kakao = require('./kakao');
const mysql = require('./mysql');
const push = require('./push');

const allowedUsers = {
  1255050703 : true,  // danny
  1255961938 : true,  // danny test
  1255150518 : true   // boram
};

let debug = false;

const validateToken = async function(accessToken,userId){
  const profile = await kakao.validateToken(accessToken,userId);

  //profile id generated by accessToken does not match, illegal access.
  if(!profile || !allowedUsers[profile.id]){
    return false;
  }

  //either token never set, or token changed
  if(allowedUsers[profile.id] === true || allowedUsers[profile.id] !== accessToken){
    allowedUsers[profile.id] = accessToken;
    mysql.updateUser(profile.id,profile.properties.nickname,profile.properties.thumbnail_image);
  }
  return true;
};

const socket =  function(http,server){
  const io = require('socket.io')(http);
  io.listen(server);

  io.on('connection', function(socket){
    socket.on('join',async function(data){
      if(!validateToken(data.accessToken,data.userId)){
        return;
      }
      socket.join('main');
      const messages = await mysql.getMessages().catch(function(err){
        console.error(err);
        socket.emit('errorMsg',err);
      });
      socket.emit('socketRdy',messages);
    });

    socket.on('msg',function(data){

      if(!allowedUsers[data.profile.userId] ||
        allowedUsers[data.profile.userId] !== data.profile.accessToken ||
        debug){
        //TODO refresh with message in query aparam
        socket.emit('refresh');
        return;
      }
      mysql.insertMessage(data.profile.userId,data.msg);
      io.to('main').emit('msg',{
        userId : data.profile.userId,
        nickname : data.profile.nickname,
        thumbnailImage : data.profile.thumbnailImage,
        message : data.msg,
        timestamp : new Date()
      });
    });

    socket.on('push',function(subscription,data){
      push.send(subscription,data);
    });

    /*
      auto leaving on disconnect may be problematic due to
      no auto join logic on connect
    no auto joiin logic on reconnect
    socket.on('disconnect', function() {
      socket.leave('main');
    });
    */
  });

  return io;
};

module.exports = socket;
